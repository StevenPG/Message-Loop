// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package rpcdemo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OutRequest struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutRequest) Reset()         { *m = OutRequest{} }
func (m *OutRequest) String() string { return proto.CompactTextString(m) }
func (*OutRequest) ProtoMessage()    {}
func (*OutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *OutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutRequest.Unmarshal(m, b)
}
func (m *OutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutRequest.Marshal(b, m, deterministic)
}
func (m *OutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutRequest.Merge(m, src)
}
func (m *OutRequest) XXX_Size() int {
	return xxx_messageInfo_OutRequest.Size(m)
}
func (m *OutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OutRequest proto.InternalMessageInfo

func (m *OutRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type OutResponse struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutResponse) Reset()         { *m = OutResponse{} }
func (m *OutResponse) String() string { return proto.CompactTextString(m) }
func (*OutResponse) ProtoMessage()    {}
func (*OutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *OutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutResponse.Unmarshal(m, b)
}
func (m *OutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutResponse.Marshal(b, m, deterministic)
}
func (m *OutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutResponse.Merge(m, src)
}
func (m *OutResponse) XXX_Size() int {
	return xxx_messageInfo_OutResponse.Size(m)
}
func (m *OutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OutResponse proto.InternalMessageInfo

func (m *OutResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*OutRequest)(nil), "grpc.outRequest")
	proto.RegisterType((*OutResponse)(nil), "grpc.outResponse")
}

func init() {
	proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd)
}

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x2f, 0x2a, 0x48, 0x56,
	0x52, 0xe3, 0xe2, 0xca, 0x2f, 0x2d, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe0,
	0x62, 0x4f, 0xce, 0xcf, 0x2b, 0x49, 0xcd, 0x2b, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82,
	0x71, 0x95, 0xd4, 0xb9, 0xb8, 0xc1, 0xea, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x71, 0x2b, 0x34,
	0x72, 0x02, 0x1b, 0x18, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc2, 0xc5, 0x9d, 0x9b,
	0x98, 0x9d, 0x0a, 0x33, 0x5f, 0x40, 0x0f, 0x64, 0xa9, 0x1e, 0xc2, 0x46, 0x29, 0x41, 0x24, 0x11,
	0x88, 0xd9, 0x4a, 0x0c, 0x4e, 0x6c, 0x51, 0x60, 0xc7, 0x25, 0xb1, 0x81, 0x5d, 0x6a, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x65, 0xf3, 0xa5, 0x92, 0xba, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OutServiceClient is the client API for OutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OutServiceClient interface {
	MakeRequest(ctx context.Context, in *OutRequest, opts ...grpc.CallOption) (*OutResponse, error)
}

type outServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOutServiceClient(cc grpc.ClientConnInterface) OutServiceClient {
	return &outServiceClient{cc}
}

func (c *outServiceClient) MakeRequest(ctx context.Context, in *OutRequest, opts ...grpc.CallOption) (*OutResponse, error) {
	out := new(OutResponse)
	err := c.cc.Invoke(ctx, "/grpc.outService/makeRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OutServiceServer is the server API for OutService service.
type OutServiceServer interface {
	MakeRequest(context.Context, *OutRequest) (*OutResponse, error)
}

// UnimplementedOutServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOutServiceServer struct {
}

func (*UnimplementedOutServiceServer) MakeRequest(ctx context.Context, req *OutRequest) (*OutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeRequest not implemented")
}

func RegisterOutServiceServer(s *grpc.Server, srv OutServiceServer) {
	s.RegisterService(&_OutService_serviceDesc, srv)
}

func _OutService_MakeRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutServiceServer).MakeRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.outService/MakeRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutServiceServer).MakeRequest(ctx, req.(*OutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OutService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.outService",
	HandlerType: (*OutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "makeRequest",
			Handler:    _OutService_MakeRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
